{"name": "GetPlayerCameraTargetActor", "tags": ["player"], "kind": "functions", "notes": null, "warnings": "This function is disabled by default to save bandwidth. Use EnablePlayerCameraTarget to enable it for each player.", "versions": "This function was added in SA-MP 0.3.7 and will not work in earlier versions!", "tips": "This function only tells you which actor (if any) the player is looking at. To find out if they are aiming at them, you need to use GetPlayerTargetActor.", "outdated": null, "lowercase": null, "description": "Allows you to retrieve the ID of the actor the player is looking at (in any).", "params_title": "(playerid)", "params_body": [{"name": "playerid", "description": "The ID of the player to get the target actor of."}], "return_values": "The ID of the actor the player is looking at.", "pawn_code": ["new bool:ActorHandsup[MAX_ACTORS];\n\u00a0\npublic OnPlayerConnect(playerid)\n{\n    EnablePlayerCameraTarget(playerid, 1);\n    return 1;\n}\n\u00a0\npublic OnPlayerUpdate(playerid)\n{\n    // Find out what actor (if any) the player is LOOKING at\n    new playerTargetActor = GetPlayerCameraTargetActor(playerid);\n\u00a0\n    // If they ARE looking at ANY actor\n    if(playerTargetActor\u00a0!= INVALID_ACTOR_ID)\n    {\n        // Store the player's weapon so we can check if they are armed\n        new playerWeapon = GetPlayerWeapon(playerid);\n\u00a0\n        // Get the player's keys so we can check if they are aiming\n        new keys, updown, leftright;\n        GetPlayerKeys(playerid, keys, updown, leftright);\n\u00a0\n        // If the actor hasn't put its hands up yet, AND the player is ARMED\n        if(!ActorHandsup[playerTargetActor] && playerWeapon >= 22 && playerWeapon <= 42 && keys & KEY_AIM)\n        {\n            // Apply 'hands up' animation\n            ApplyActorAnimation(playerTargetActor, \"SHOP\", \"SHP_HandsUp_Scr\",4.1,0,0,0,1,0);\n\u00a0\n            // Set 'ActorHandsup' to true, so the animation won't keep being reapplied\n            ActorHandsup[playerTargetActor] = true;\n        }\n    }\n    return 1;\n}"], "code": [], "related_fn": [" GetPlayerTargetActor: Gets id of an actor which is aimed by certain player.\n", " GetPlayerCameraTargetPlayer: Get the ID of the player a player is looking at.\n", " GetPlayerCameraTargetVehicle: Get the ID of the vehicle a player is looking at.\n", " GetPlayerCameraTargetObject: Get the ID of the object a player is looking at.\n", " GetPlayerCameraFrontVector: Get the player's camera front vector\n"], "related_cb": []}