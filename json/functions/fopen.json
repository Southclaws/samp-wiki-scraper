{"name": "fopen", "tags": [], "kind": "functions", "notes": null, "warnings": "If you use io_read and the file doesn't exist, it will return a NULL reference. Using invalid references on file functions will crash your server!", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Open a file (to read from or write to).", "params_title": "(name[], filemode:mode = io_readwrite)", "params_body": [{"name": "name[]", "description": "The path to the file to open (if just a filename is specified, it will open the file with the name specified in the 'scriptfiles' folder)."}, {"name": "mode", "description": "The mode to open the file with (default: io_readwrite)."}], "return_values": "Returns the file handle. This handle is used for reading and writing. 0 if failed to open file.", "pawn_code": ["// Open \"file.txt\" in \"read only\" mode\nnew File:handle = fopen(\"file.txt\", io_read),\n\u00a0\n\t// Initialize \"buf\"\n\tbuf[128];\n\u00a0\n// Check, if the file is opened\nif(handle)\n{\n\t// Success\n\u00a0\n\t// Read the whole file\n\twhile(fread(handle, buf)) print(buf);\n\u00a0\n\t// Close the file\n\tfclose(handle);\n}\nelse\n{\n\t// Error\n\tprint(\"The file \\\"file.txt\\\" does not exists, or can't be opened.\");\n}", "// Open \"file.txt\" in \"write only\" mode\nnew File:handle = fopen(\"file.txt\", io_write);\n\u00a0\n// Check, if file is open\nif(handle)\n{\n\t// Success\n\u00a0\n\t// Write \"I just wrote here!\" into this file\n\tfwrite(handle, \"I just wrote here!\");\n\u00a0\n\t// Close the file\n\tfclose(handle);\n}\nelse\n{\n\t// Error\n\tprint(\"Failed to open file \\\"file.txt\\\".\");\n}", "// Open \"file.txt\" in \"read and write\" mode\nnew File:handle = fopen(\"file.txt\"),\n\u00a0\n\t// Initialize \"buf\"\n\tbuf[128];\n\u00a0\n// Check, if file is open\nif(handle)\n{\n\t// Success\n\u00a0\n\t// Read the whole file\n\twhile(fread(handle, buf)) print(buf);\n\u00a0\n\t// Set the file pointer to the first byte\n\tfseek(handle, _, seek_begin);\n\u00a0\n\t// Write \"I just wrote here!\" into this file\n\tfwrite(handle, \"I just wrote here!\");\n\u00a0\n\t// Close the file\n\tfclose(handle);\n}\nelse\n{\n\t// Error\n\tprint(\"The file \\\"file.txt\\\" does not exists, or can't be opened.\");\n}", "// Open \"file.txt\" in \"append only\" mode\nnew File:handle = fopen(\"file.txt\", io_append);\n\u00a0\n// Check, if file is open\nif(handle)\n{\n\t// Success\n\u00a0\n\t// Append \"This is a text.\\r\\n\"\n\tfwrite(handle, \"This is a test.\\r\\n\");\n\u00a0\n\t// Close the file\n\tfclose(handle);\n}\nelse\n{\n\t// Error\n\tprint(\"Failed to open file \\\"file.txt\\\".\");\n}"], "code": ["io_read      Reads from the file.\nio_write     Write in the file, or create the file if it does not exist. Erases all existing contents.\nio_readwrite Reads the file or creates it if it doesn't already exist.\nio_append    Appends (adds) to file, write-only. If the file does not exist, it is created.\n"], "related_fn": [" fopen: Open a file.\n", " fclose: Close a file.\n", " ftemp: Create a temporary file stream.\n", " fremove: Remove a file.\n", " fwrite: Write to a file.\n", " fread: Read a file.\n", " fputchar: Put a character in a file.\n", " fgetchar: Get a character from a file.\n", " fblockwrite: Write blocks of data into a file.\n", " fblockread: Read blocks of data from a file.\n", " fseek: Jump to a specific character in a file.\n", " flength: Get the file length.\n", " fexist: Check, if a file exists.\n", " fmatch: Check, if patterns with a file name matches.\n"], "related_cb": []}