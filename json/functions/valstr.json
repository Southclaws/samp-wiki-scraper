{"name": "valstr", "tags": [], "kind": "functions", "notes": null, "warnings": "Passing a high value to this function can cause the server to freeze/crash. Fixes are available. Below is a fix that can be put straight in to your script (before valstr is used anywhere). fixes.inc includes this fix.", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Convert an integer into a string.", "params_title": "(dest[], value, bool:pack=false)", "params_body": [{"name": "dest", "description": "The destination of the string."}, {"name": "value", "description": "The value to convert to a string."}, {"name": "pack (optional)", "description": "Whether to pack the destination (off by default)."}], "return_values": "This function does not return any specific values.", "pawn_code": ["new string[4];\nnew iValue = 250;\nvalstr(string,iValue); // string is now \"250\"", "// valstr fix by Slice\nstock FIX_valstr(dest[], value, bool:pack = false)\n{\n    // format can't handle cellmin properly\n    static const cellmin_value[] =\u00a0!\"-2147483648\";\n\u00a0\n    if (value == cellmin)\n        pack && strpack(dest, cellmin_value, 12) || strunpack(dest, cellmin_value, 12);\n    else\n        format(dest, 12, \"%d\", value), pack && strpack(dest, dest, 12);\n}\n#define valstr FIX_valstr"], "code": [], "related_fn": [" strval: Convert a string into an integer.\n", " strcmp: Compare two strings to check if they are the same.\n"], "related_cb": []}