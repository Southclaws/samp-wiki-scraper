{"name": "GetPlayerArmour", "tags": ["player"], "kind": "functions", "notes": null, "warnings": "\nEven though the armour can be set to near infinite values on the server side, the individual clients will only report values up to 255. Anything higher will wrap around; 256 becomes 0, 257 becomes 1, etc.\nArmour is obtained rounded to integers: set 50.15, but get 50.0\n\n", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "This function stores the armour of a player into a variable.", "params_title": "(playerid, &Float:armour)", "params_body": [{"name": "playerid", "description": "The ID of the player that you want to get the armour of."}, {"name": "&Float:armour", "description": "The float to to store the armour in, passed by reference."}], "return_values": " 1 - success\n\n 0 - failure (i.e. player not connected).\n\n The player's armour is stored in the specified variable.", "pawn_code": ["new Float:armour;\nGetPlayerArmour(playerid, armour);\nnew s[40];\nformat(s, sizeof(s), \"SERVER: Your armour is %0.f percent\", armour);\nSendClientMessage(playerid, 0xFFFFFFAA, s);"], "code": [], "related_fn": [" SetPlayerArmour: Set the armour of a player.\n", " GetPlayerHealth: Find out how much health a player has.\n", " GetVehicleHealth: Check the health of a vehicle.\n"], "related_cb": []}