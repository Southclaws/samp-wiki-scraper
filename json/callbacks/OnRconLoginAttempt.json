{"name": "OnRconLoginAttempt", "tags": [], "kind": "callbacks", "notes": "\n This callback is only called when /rcon login is used in-game.\n This callback is only called when the player is not yet logged in. When the player is logged in, OnRconCommand is called instead.", "warnings": null, "versions": "This callback was added in SA-MP 0.3a and will not work in earlier versions!", "tips": null, "outdated": null, "lowercase": null, "description": "This callback is called when someone attempts to log in to RCON in-game; successful or not.", "params_title": "(ip[], password[], success)", "params_body": [{"name": "ip[]", "description": "The IP of the player that tried to log in to RCON."}, {"name": "password[]", "description": "The password used to login with."}, {"name": "success", "description": "0 if the password was incorrect or 1 if it was correct."}], "return_values": " It is always called first in filterscripts.", "pawn_code": ["public OnRconLoginAttempt(ip[], password[], success)\n{\n    if(!success) //If the password was incorrect\n    {\n        printf(\"FAILED RCON LOGIN BY IP %s USING PASSWORD %s\",ip, password);\n        new pip[16];\n        for(new i = GetPlayerPoolSize(); i\u00a0!= -1; --i) //Loop through all players\n        {\n            GetPlayerIp(i, pip, sizeof(pip));\n            if(!strcmp(ip, pip, true)) //If a player's IP is the IP that failed the login\n            {\n                SendClientMessage(i, 0xFFFFFFFF, \"Wrong Password. Bye!\"); //Send a message\n                Kick(i); //They are now kicked.\n            }\n        }\n    }\n    return 1;\n}"], "code": [], "related_fn": [" IsPlayerAdmin: Checks if a player is logged into RCON.\n", " SendRconCommand: Sends an RCON command via the script.\n"], "related_cb": [" OnRconCommand: Called when an RCON command is sent.\n", " IsPlayerAdmin: Checks if a player is logged into RCON.\n", " SendRconCommand: Sends an RCON command via the script.\n"]}