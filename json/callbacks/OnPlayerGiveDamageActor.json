{"name": "OnPlayerGiveDamageActor", "tags": ["player"], "kind": "callbacks", "notes": "This function does not get called if the actor is set invulnerable (WHICH IS BY DEFAULT). See SetActorInvulnerable.", "warnings": null, "versions": "This callback was added in SA-MP 0.3.7 and will not work in earlier versions!", "tips": null, "outdated": null, "lowercase": null, "description": "This callback is called when a player gives damage to an actor.", "params_title": "(playerid, damaged_actorid, Float:amount, weaponid, bodypart)", "params_body": [{"name": "playerid", "description": "The ID of the player that gave damage."}, {"name": "damaged_actorid", "description": "The ID of the actor that received damage."}, {"name": "amount", "description": "The amount of health/armour damaged_actorid has lost."}, {"name": "weaponid", "description": "The reason that caused the damage."}, {"name": "bodypart", "description": "The body part that was hit"}], "return_values": " 1 - Callback will not be called in other filterscripts.\n\n 0 - Allows this callback to be called in other filterscripts.\n\n It is always called first in filterscripts so returning 1 there blocks other filterscripts from seeing it.", "pawn_code": ["public OnPlayerGiveDamageActor(playerid, damaged_actorid, Float: amount, weaponid, bodypart)\n{\n    new string[128], attacker[MAX_PLAYER_NAME];\n    new weaponname[24];\n    GetPlayerName(playerid, attacker, sizeof (attacker));\n    GetWeaponName(weaponid, weaponname, sizeof (weaponname));\n\u00a0\n    format(string, sizeof(string), \"%s has made %.0f damage to actor id %d, weapon: %s\", attacker, amount, damaged_actorid, weaponname);\n    SendClientMessageToAll(0xFFFFFFFF, string);\n    return 1;\n}"], "code": [], "related_fn": [" CreateActor: Create an actor (static NPC).\n", " SetActorInvulnerable: Set actor invulnerable.\n", " SetActorHealth: Set the health of an actor.\n", " GetActorHealth: Gets the health of an actor.\n", " IsActorInvulnerable: Check if actor is invulnerable.\n", " IsValidActor: Check if actor id is valid.\n", " OnActorStreamOut: Called when an actor is streamed out by a player.\n", " OnPlayerStreamIn: Called when a player streams in for another player.\n"], "related_cb": [" OnActorStreamOut: Called when an actor is streamed out by a player.\n", " OnPlayerStreamIn: Called when a player streams in for another player.\n"]}