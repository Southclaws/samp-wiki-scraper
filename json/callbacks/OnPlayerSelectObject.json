{"name": "OnPlayerSelectObject", "tags": ["player"], "kind": "callbacks", "notes": null, "warnings": null, "versions": "This function was added in SA-MP 0.3e and will not work in earlier versions!", "tips": null, "outdated": null, "lowercase": null, "description": "This callback is called when a player selects an object after SelectObject has been used.", "params_title": "(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)", "params_body": [{"name": "playerid", "description": "The ID of the player that selected an object"}, {"name": "type", "description": "The type of selection"}, {"name": "objectid", "description": "The ID of the selected object"}, {"name": "modelid", "description": "The model of the selected object"}, {"name": "Float:fX", "description": "The X position of the selected object"}, {"name": "Float:fY", "description": "The Y position of the selected object"}, {"name": "Float:fZ", "description": "The Z position of the selected object"}], "return_values": " 1 - Will prevent other scripts from receiving this callback.\n\n 0 - Indicates that this callback will be passed to the next script.\n\n It is always called first in filterscripts.", "pawn_code": ["public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)\n{\n    printf(\"Player %d selected object %d\", playerid, objectid);\n    if(type == SELECT_OBJECT_GLOBAL_OBJECT)\n    {\n        EditObject(playerid, objectid);\n    }\n    else\n    {\n        EditPlayerObject(playerid, objectid);\n    }\n    SendClientMessage(playerid, 0xFFFFFFFF, \"You now are able to edit your object!\");\n    return 1;\n}"], "code": [], "related_fn": [" SelectObject: Select an object.\n"], "related_cb": []}