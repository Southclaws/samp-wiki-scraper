{"name": "CreateActor", "notes": null, "warnings": "\n Actors are completely separate from NPCs. They do NOT use player IDs/slots on the server and CANNOT be handled like NPCs.\n Actors are limited to 1000 (MAX_ACTORS).\n Actors can be pushed by vehicles, use a timer to put them back at their positions.\n As of 0.3.7 R2 actors default to being invulnerable.", "versions": "This function was added in SA-MP 0.3.7 and will not work in earlier versions!", "tips": "Actors are designed to just stand somewhere, for example cashiers and bartenders. They can perform animations (once or looping) using ApplyActorAnimation.", "outdated": null, "lowercase": null, "description": "Create a static 'actor' in the world. These 'actors' are like NPCs, however they have limited functionality. They do not take up server player slots.", "params_title": "(modelid, Float:X, Float:Y, Float:Z, Float:Rotation)", "params_body": [{"name": "modelid", "description": "The model ID (skin ID) the actor should have."}, {"name": "x", "description": "The X coordinate to create the actor at."}, {"name": "y", "description": "The Y coordinate to create the actor at."}, {"name": "z", "description": "The Z coordinate to create the actor at."}, {"name": "Rotation", "description": "The facing angle (rotation) for the actor to have."}], "return_values": " The created Actor ID (start at 0).\n\n INVALID_ACTOR_ID (65535) If the actor limit (1000) is reached.", "pawn_code": ["new ActorCJ;\n\u00a0\npublic OnGameModeInit()\n{\n    // Create an actor (CJ) at Blueberry Acres (Center of SA map)\n    ActorCJ = CreateActor(0, 0.0, 0.0, 3.0, 0.0);\n}"], "code": [], "related_fn": [" DestroyActor: Destroy an actor.\n", " SetActorPos: Set the position of an actor.\n", " GetActorPos: Get the position of an actor.\n", " SetActorFacingAngle: Set the facing angle of an actor.\n", " GetActorFacingAngle: Get the facing angle of an actor.\n", " SetActorVirtualWorld: Set the virtual world of an actor.\n", " GetActorVirtualWorld: Get the virtual world of an actor.\n", " ApplyActorAnimation: Apply an animation to an actor.\n", " ClearActorAnimations: Clear any animations that are applied to an actor.\n", " GetPlayerCameraTargetActor: Get the ID of the actor (if any) a player is looking at.\n", " IsActorStreamedIn: Checks if an actor is streamed in for a player.\n", " SetActorHealth: Set the health of an actor.\n", " GetActorHealth: Gets the health of an actor.\n", " SetActorInvulnerable: Set actor invulnerable.\n", " IsActorInvulnerable: Check if actor is invulnerable.\n", " IsValidActor: Check if actor id is valid.\n", " GetActorPoolSize: Gets the highest actorid created on the server.\n", " GetPlayerTargetActor: Gets id of an actor which is aimed by certain player.\n", " OnActorStreamIn: Called when an actor is streamed in by a player.\n", " OnActorStreamOut: Called when an actor is streamed out by a player.\n", "OnPlayerGiveDamageActor: This callback is called when a player gives damage to an actor.\n"], "related_cb": [" OnActorStreamIn: Called when an actor is streamed in by a player.\n", " OnActorStreamOut: Called when an actor is streamed out by a player.\n", "OnPlayerGiveDamageActor: This callback is called when a player gives damage to an actor.\n"]}