{"name": "GetPlayerKeys_FR", "tags": ["player"], "notes": null, "warnings": "\n Seulement la fonction de la touche peut \u00eatre d\u00e9tect\u00e9; Pas la v\u00e9ritable touche. Par exemple, il n'est pas possible de d\u00e9tecter si le joueur presse la touche ESPACE, mais il est possible de d\u00e9tecter la touche SPRINT (qui peut \u00eatre assign\u00e9 \u00e0 une autre touche) (touche espace par d\u00e9faut)).\n Depuis la mise \u00e0 jour 0.3.7, Les touches \"A\" et \"D\" ne sont plus reconnus depuis un v\u00e9hicule. Cependant, les touches \"W\" et \"S\" peuvent \u00eatre d\u00e9tect\u00e9 gr\u00e2ce au param\u00e8tre \"keys\".", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Obtenir la touche sur laquelle appuie le joueur.", "params_title": "(playerid, &keys, &updown, &leftright)", "params_body": [{"name": "playerid", "description": "ID du joueur dont on veut obtenir la touche."}, {"name": "keys", "description": "Un ensemble de bits contenant l'\u00e9tat des touches du joueur. Cette valeur est ce que l'on appelle un Masque binaire. Cliquez ici pour la liste des touches."}, {"name": "updown", "description": "Etat Up/Down."}, {"name": "leftright", "description": "Etat Left/Right."}], "return_values": " Les touches sont stock\u00e9s dans les variables sp\u00e9cifi\u00e9es.", "pawn_code": ["public OnPlayerUpdate(playerid)\n{\n    new Keys,ud,lr;\n    GetPlayerKeys(playerid,Keys,ud,lr);\n\u00a0\n    if(ud == KEY_UP) SendClientMessage(playerid, -1, \"UP\");\n    else if(ud == KEY_DOWN) SendClientMessage(playerid, -1, \"DOWN\");\n\u00a0\n    if(lr == KEY_LEFT) SendClientMessage(playerid, -1, \"LEFT\");\n    else if(lr == KEY_RIGHT) SendClientMessage(playerid, -1, \"RIGHT\");\n\u00a0\n    return 1;\n}"], "code": [], "related_fn": [], "related_cb": []}