{"name": "flength", "notes": null, "warnings": "Using an invalid handle will crash your server! Get a valid handle by using fopen or ftemp.", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Returns the length of a file.", "params_title": "(File:handle)", "params_body": [{"name": "handle", "description": "The file handle returned by fopen or ftemp"}], "return_values": "The length of a file, in bytes.", "pawn_code": ["// Open \"file.txt\" in \"read only\" mode\nnew File:handle = fopen(\"file.txt\", io_read);\n\u00a0\n// If \"file.txt\" is open\nif(handle)\n{\n\t// Success\n\u00a0\n\t// Print the size oin bytes of \"file.txt\"\n\tprintf(\"File size: %d\", flength(handle));\n\u00a0\n\t// Close \"file.txt\"\n\tfclose(handle);\n}\nelse\n{\n\t// Error\n\tprint(\"Failed to open \\\"file.txt\\\".\");\n}"], "code": [], "related_fn": [" fopen: Open a file.\n", " fclose: Close a file.\n", " ftemp: Create a temporary file stream.\n", " fremove: Remove a file.\n", " fwrite: Write to a file.\n", " fread: Read a file.\n", " fputchar: Put a character in a file.\n", " fgetchar: Get a character from a file.\n", " fblockwrite: Write blocks of data into a file.\n", " fblockread: Read blocks of data from a file.\n", " fseek: Jump to a specific character in a file.\n", " flength: Get the file length.\n", " fexist: Check, if a file exists.\n", " fmatch: Check, if patterns with a file name matches.\n"], "related_cb": []}