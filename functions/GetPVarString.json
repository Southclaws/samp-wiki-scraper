{"name": "GetPVarString", "tags": ["pvar"], "notes": "If length of string is zero (value not set), string_return text will not be updated or set to anything and will remain with old data, neccesying that you clear the variable to blank value if GetPVarString returns 0 if that behavior is undesired\n", "warnings": null, "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Gets a player variable as a string.", "params_title": "(playerid, varname[], string_return[], len)", "params_body": [{"name": "playerid", "description": "The ID of the player whose player variable to get."}, {"name": "varname", "description": "The name of the player variable, set by SetPVarString."}, {"name": "&string_return", "description": "The array in which to store the string value in, passed by reference."}, {"name": "len", "description": "The maximum length of the returned string."}], "return_values": "The length of the string.", "pawn_code": ["public OnPlayerConnect(playerid,reason)\n{\n    new playerName[MAX_PLAYER_NAME+1];\n    GetPlayerName(playerid, playerName, MAX_PLAYER_NAME);\n    SetPVarString(playerid, \"PlayerName\", playerName);\n    return 1;\n}\n\u00a0\npublic OnPlayerDeath(playerid, killerid, reason)\n{\n    new playerName[MAX_PLAYER_NAME+1];\n    GetPVarString(playerid, \"PlayerName\", playerName, sizeof(playerName));\n\u00a0\n    printf(\"%s died.\", playerName);\n}"], "code": [], "related_fn": [" SetPVarString: Set a string for a player variable.\n", " SetPVarInt: Set an integer for a player variable.\n", " GetPVarInt: Get the previously set integer from a player variable.\n", " SetPVarFloat: Set a float for a player variable.\n", " GetPVarFloat: Get the previously set float from a player variable.\n", " DeletePVar: Delete a player variable.\n"], "related_cb": []}