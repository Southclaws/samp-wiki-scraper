{"name": "ftemp", "notes": null, "warnings": "This function can crash the server when the right directory isn't created.", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Creates a file in the \"tmp\", \"temp\" or root directory with random name for reading and writing. The file is deleted after fclose() is used on the file.", "params_body": [], "return_values": null, "pawn_code": ["// Create a temporary file stream\nnew File:t_handle = ftemp(),\n\u00a0\n\t// Declare \"handle\"\n\tFile:handle,\n\u00a0\n\t// Declare \"g_char\"\n\tg_char;\n\u00a0\n// Check, if temporary file stream is open\nif(t_handle)\n{\n\t// Success\n\u00a0\n\t// Open \"file.txt\" in \"read only\" mode and check, if the file is open\n\tif(handle = fopen(\"file.txt\", io_read))\n\t{\n\t\t// Get all the characters from \"file.txt\"\n\t\twhile((g_char = fgetchar(handle, 0, false))\u00a0!= EOF)\n\t\t{\n\t\t\t// Write character in lowercase into the temporary file stream\n\t\t\tfputchar(t_handle, tolower(g_char), false);\n\t\t}\n\u00a0\n\t\t// Close \"file.txt\"\n\t\tfclose(handle);\n\u00a0\n\t\t// Set the file pointer of the temporary file stream to the first byte\n\t\tfseek(t_handle, _, seek_begin);\n\u00a0\n\t\t// Open \"file1.txt\" in \"write only\" mode, and check, if the file is open\n\t\tif(handle = fopen(\"file1.txt\", io_write))\n\t\t{\n\t\t\t// Success\n\u00a0\n\t\t\t// Get all the characters from the temporary file stream\n\t\t\twhile((g_char = fgetchar(t_handle, 0, false))\u00a0!= EOF)\n\t\t\t{\n\t\t\t\t// Write character into \"file1.txt\"\n\t\t\t\tfputchar(handle, g_char, false);\n\t\t\t}\n\u00a0\n\t\t\t// Close \"file1.txt\"\n\t\t\tfclose(handle);\n\u00a0\n\t\t\t// Set the file pointer of the temporary file stream to the first byte\n\t\t\tfseek(t_handle, _, seek_begin);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Error\n\t\t\tprint(\"Failed to open file \\\"file1.txt\\\".\");\n\t\t}\n\u00a0\n\t\t// Open \"file2.txt\" in \"write only\" mode, and check, if the file is open\n\t\tif(handle = fopen(\"file2.txt\", io_write))\n\t\t{\n\t\t\t// Success\n\u00a0\n\t\t\t// Get all the characters from the temporary file stream\n\t\t\twhile((g_char = fgetchar(t_handle, 0, false))\u00a0!= EOF)\n\t\t\t{\n\t\t\t\t// Write character into \"file2.txt\"\n\t\t\t\tfputchar(handle, g_char, false);\n\t\t\t}\n\u00a0\n\t\t\t// Close \"file2.txt\"\n\t\t\tfclose(handle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Error\n\t\t\tprint(\"Failed to open file \\\"file2.txt\\\".\");\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Error\n\t\tprint(\"Failed to open file \\\"file.txt\\\".\");\n\t}\n\u00a0\n\t// Close the temporary file stream\n\tfclose(t_handle);\n}\nelse\n{\n\t// Error\n\tprint(\"Failed to create a temporary file stream.\");\n}"], "code": [], "related_fn": [" fopen: Open a file.\n", " fclose: Close a file.\n", " ftemp: Create a temporary file stream.\n", " fremove: Remove a file.\n", " fwrite: Write to a file.\n", " fread: Read a file.\n", " fputchar: Put a character in a file.\n", " fgetchar: Get a character from a file.\n", " fblockwrite: Write blocks of data into a file.\n", " fblockread: Read blocks of data from a file.\n", " fseek: Jump to a specific character in a file.\n", " flength: Get the file length.\n", " fexist: Check, if a file exists.\n", " fmatch: Check, if patterns with a file name matches.\n"], "related_cb": []}