{"name": "db next row", "notes": null, "warnings": "Using an invalid handle will crash your server! Get a valid handle by using db_query. But it's protected against NULL references.", "versions": null, "tips": null, "outdated": null, "lowercase": null, "description": "Moves to the next row of the result allocated from db_query.", "params_title": "(DBResult:dbresult)", "params_body": [{"name": "DBResult:dbresult", "description": "The result of db_query."}], "return_values": ["Returns 1 on success, otherwise 0 if DBResult:dbresult is a NULL reference or the last row is reached."], "pawn_code": ["// Callback\npublic OnPlayerCommandText(playerid, cmdtext[])\n{\n\t// If \"cmdtext\" equals \"/EchoWoetJoinList\"\n\tif(!strcmp(cmdtext, \"/EchoWoetJoinList\", true, 17))\n\t{\n\t\t// Declare \"db_result\" and \"info\"\n\t\tnew DBResult:db_result, info[2][30];\n\u00a0\n\t\t// Select the join list of the player \"Woet\"\n\t\tdb_result = db_query(db_handle, \"SELECT * FROM `join_log` WHERE `name`='Woet'\");\n\u00a0\n\t\t// Do these\n\t\tdo\n\t\t{\n\t\t\t// Store the data of \"ip\" into \"info[0]\"\n\t\t\tdb_get_field_assoc(db_result, \"ip\", info[0], sizeof info[]);\n\u00a0\n\t\t\t// Store the data of \"time\" into \"info[1]\"\n\t\t\tdb_get_field_assoc(db_result, \"time\", info[1], sizeof info[]);\n\u00a0\n\t\t\t// Print into the console\n\t\t\tprintf(\"Print join list: Name: Woet IP: %s Date: %s\", info[0], info[1]);\n\t\t}\n\u00a0\n\t\t// While next row has been fetched\n\t\twhile(db_next_row(db_result));\n\u00a0\n\t\t// Returns 1\n\t\treturn 1;\n\t}\n\u00a0\n\t// Returns 0\n\treturn 0;\n}"], "code": [], "related_fn": [" db_open: Open a connection to an SQLite database\n", " db_close: Close the connection to an SQLite database\n", " db_query: Query an SQLite database\n", " db_free_result: Free result memory from a db_query\n", " db_num_rows: Get the number of rows in a result\n", " db_next_row: Move to the next row\n", " db_num_fields: Get the number of fields in a result\n", " db_field_name: Returns the name of a field at a particular index\n", " db_get_field: Get content of field with specified ID from current result row\n", " db_get_field_assoc: Get content of field with specified name from current result row\n", " db_get_field_int: Get content of field as an integer with specified ID from current result row\n", " db_get_field_assoc_int: Get content of field as an integer with specified name from current result row\n", " db_get_field_float: Get content of field as a float with specified ID from current result row\n", " db_get_field_assoc_float: Get content of field as a float with specified name from current result row\n", " db_get_mem_handle: Get memory handle for an SQLite database that was opened with db_open.\n", " db_get_result_mem_handle: Get memory handle for an SQLite query that was executed with db_query.\n", " db_debug_openfiles\n", " db_debug_openresults\n"], "related_cb": []}